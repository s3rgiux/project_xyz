[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:[m[K In function â€˜[01m[Kimage** load_alphabet_with_file(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:20:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage**[m[Kâ€™ [-fpermissive]
   image **alphabets = calloc(nsize, sizeof(image));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:21:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
   char* labels = "/labels/%d_%d.png";
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:26:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     alphabets[j] = calloc(128, sizeof(image));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:[m[K In function â€˜[01m[Klayer make_activation_layer(int, int, ACTIVATION)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:14:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:21:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(batch*inputs, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:22:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(batch*inputs, sizeof(float*));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:[m[K In function â€˜[01m[Kchar* get_activation_string(ACTIVATION)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:12:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "logistic";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:14:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "loggy";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:16:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "relu";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:18:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "elu";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:20:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "selu";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:22:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "relie";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:24:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "ramp";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:26:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "linear";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:28:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "tanh";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:30:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "plse";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:32:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "leaky";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:34:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "stair";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:36:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "hardtan";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:38:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "lhtan";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:42:12:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     return "relu";
[01;32m[K            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/blas.cpp:[m[K In function â€˜[01m[Kvoid flatten(float*, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/blas.cpp:34:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *swap = calloc(size*layers*batch, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:[m[K In function â€˜[01m[Kavgpool_layer make_avgpool_layer(int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:8:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     avgpool_layer l = {0};
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:20:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output =  calloc(output_size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:21:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta =   calloc(output_size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:[m[K In function â€˜[01m[Klayer make_batchnorm_layer(int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:9:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:15:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(h * w * c * batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:16:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta  = calloc(h * w * c * batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:20:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.scales = calloc(c, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:21:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.scale_updates = calloc(c, sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:22:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.biases = calloc(c, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:23:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.bias_updates = calloc(c, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.mean = calloc(c, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:30:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.variance = calloc(c, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:32:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.rolling_mean = calloc(c, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:33:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.rolling_variance = calloc(c, sizeof(float));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:[m[K In function â€˜[01m[Klayer make_connected_layer(int, int, int, ACTIVATION, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:17:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:32:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(batch*outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:33:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(batch*outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:35:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weight_updates = calloc(inputs*outputs, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:36:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.bias_updates = calloc(outputs, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:38:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weights = calloc(outputs*inputs, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:39:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.biases = calloc(outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:56:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.m = calloc(l.inputs*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:57:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.v = calloc(l.inputs*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:58:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.bias_m = calloc(l.outputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:59:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_m = calloc(l.outputs, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:60:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.bias_v = calloc(l.outputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:61:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_v = calloc(l.outputs, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:64:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scales = calloc(outputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:65:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_updates = calloc(outputs, sizeof(float));
[01;32m[K                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:70:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.mean = calloc(outputs, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:71:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.mean_delta = calloc(outputs, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:72:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.variance = calloc(outputs, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:73:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.variance_delta = calloc(outputs, sizeof(float));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:75:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.rolling_mean = calloc(outputs, sizeof(float));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:76:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.rolling_variance = calloc(outputs, sizeof(float));
[01;32m[K                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:78:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.x = calloc(batch*outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:79:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.x_norm = calloc(batch*outputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:[m[K In function â€˜[01m[Kconvolutional_layer make_convolutional_layer(int, int, int, int, int, int, int, int, int, ACTIVATION, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:179:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     convolutional_layer l = {0};
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:195:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weights = calloc(c/groups*n*size*size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:196:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weight_updates = calloc(c/groups*n*size*size, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:198:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.biases = calloc(n, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:199:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.bias_updates = calloc(n, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:218:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:219:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta  = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:225:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.binary_weights = calloc(l.nweights, sizeof(float));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:226:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [-fpermissive]
         l.cweights = calloc(l.nweights, sizeof(char));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:227:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scales = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:230:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.binary_weights = calloc(l.nweights, sizeof(float));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:231:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.binary_input = calloc(l.inputs*l.batch, sizeof(float));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:235:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scales = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:236:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_updates = calloc(n, sizeof(float));
[01;32m[K                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:241:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.mean = calloc(n, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:242:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.variance = calloc(n, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:244:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.mean_delta = calloc(n, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:245:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.variance_delta = calloc(n, sizeof(float));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:247:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.rolling_mean = calloc(n, sizeof(float));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:248:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.rolling_variance = calloc(n, sizeof(float));
[01;32m[K                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:249:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.x = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:250:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.x_norm = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:253:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.m = calloc(l.nweights, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:254:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.v = calloc(l.nweights, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:255:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.bias_m = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:256:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_m = calloc(n, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:257:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.bias_v = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:258:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_v = calloc(n, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_convolutional_layer(convolutional_layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:383:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:384:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta  = realloc(l->delta,  l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:386:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l->x = realloc(l->x, l->batch*l->outputs*sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:387:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l->x_norm  = realloc(l->x_norm, l->batch*l->outputs*sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:[m[K In function â€˜[01m[Kimage* get_weights(convolutional_layer)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:593:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *weights = calloc(l.n, sizeof(image));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:[m[K In function â€˜[01m[Kchar* get_cost_string(COST_TYPE)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:26:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "seg";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:28:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "sse";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:30:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "masked";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:32:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "smooth";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:34:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "L1";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:36:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "wgan";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:38:12:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     return "sse";
[01;32m[K            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:[m[K In function â€˜[01m[Kcost_layer make_cost_layer(int, int, COST_TYPE, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:44:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     cost_layer l = {0};
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:52:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(inputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:53:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(inputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:54:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cost = calloc(1, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_cost_layer(cost_layer*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:72:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta = realloc(l->delta, inputs*l->batch*sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:73:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, inputs*l->batch*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:[m[K In function â€˜[01m[Klayer make_crnn_layer(int, int, int, int, int, int, int, ACTIVATION, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:33:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:47:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.state = calloc(l.hidden*batch*(steps+1), sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:49:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.input_layer = malloc(sizeof(layer));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:54:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.self_layer = malloc(sizeof(layer));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:59:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.output_layer = malloc(sizeof(layer));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:[m[K In function â€˜[01m[Kdim3 cuda_gridsize(size_t)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:59:22:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kx[m[Kâ€™ from â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ to â€˜[01m[Kunsigned int[m[Kâ€™ inside { } [-Wnarrowing]
     dim3 d = {x, y, 1};
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:59:22:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Ky[m[Kâ€™ from â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ to â€˜[01m[Kunsigned int[m[Kâ€™ inside { } [-Wnarrowing]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:[m[K In function â€˜[01m[Kfloat cuda_compare(float*, float*, size_t, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:122:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *tmp = calloc(n, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:[m[K In function â€˜[01m[Kfloat cuda_mag_array(float*, size_t)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:169:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *temp = calloc(n, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:[m[K In function â€˜[01m[Kcrop_layer make_crop_layer(int, int, int, int, int, int, int, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:19:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     crop_layer l = {0};
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:35:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(l.outputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_crop_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:59:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kchar** get_random_paths(char**, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:44:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
     char **random_paths = calloc(n, sizeof(char*));
[01;32m[K                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kchar** find_replace_paths(char**, int, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:58:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
     char **replace_paths = calloc(n, sizeof(char*));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_image_paths_gray(char**, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:73:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     X.vals = calloc(X.rows, sizeof(float*));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_image_paths(char**, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:94:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     X.vals = calloc(X.rows, sizeof(float*));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_image_augment_paths(char**, int, int, int, int, float, float, float, float, float, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:110:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     X.vals = calloc(X.rows, sizeof(float*));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kbox_label* read_boxes(char*, int*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:147:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kbox_label*[m[Kâ€™ [-fpermissive]
     box_label *boxes = calloc(size, sizeof(box_label));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:151:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kbox_label*[m[Kâ€™ [-fpermissive]
             boxes = realloc(boxes, size*sizeof(box_label));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_swag(char*, float*, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:220:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(path, "images", "labels", labelpath);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:220:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:221:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "JPEGImages", "labels", labelpath);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:221:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:222:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:222:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:223:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:223:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:224:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:224:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_region(char*, float*, int, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:258:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(path, "images", "labels", labelpath);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:258:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:259:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "JPEGImages", "labels", labelpath);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:259:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:261:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:261:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:262:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".png", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:262:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:263:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:263:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:264:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:264:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kbox bound_image(image)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:54:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kminx[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [-Wnarrowing]
     box b = {minx, miny, maxx-minx + 1, maxy-miny + 1};
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:54:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kminy[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [-Wnarrowing]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:36:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K((maxx - minx) + 1)[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [-Wnarrowing]
     box b = {minx, miny, maxx-minx + 1, maxy-miny + 1};
[01;32m[K                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:51:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K((maxy - miny) + 1)[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [-Wnarrowing]
     box b = {minx, miny, maxx-minx + 1, maxy-miny + 1};
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_iseg(char*, int, float*, int, int, int, augment_args, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:367:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(path, "images", "mask", labelpath);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:367:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:368:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "JPEGImages", "mask", labelpath);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:368:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:369:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:369:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:370:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:370:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:371:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:371:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_mask(char*, int, float*, int, int, int, augment_args, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:405:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(path, "images", "mask", labelpath);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:405:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:406:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "JPEGImages", "mask", labelpath);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:406:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:407:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:407:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:408:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:408:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:409:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:409:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_detection(char*, int, float*, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:450:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(path, "images", "labels", labelpath);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:450:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:451:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "JPEGImages", "labels", labelpath);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:451:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:453:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "raw", "labels", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:453:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:454:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:454:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:455:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".png", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:455:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:456:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:456:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:457:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:457:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_captcha(char*, int, float*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:506:18:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     for(i = 0; i < strlen(begin) && i < n && begin[i] != '.'; ++i){
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_regression_labels_paths(char**, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:596:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(paths[i], "images", "labels", labelpath);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:596:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:597:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, "JPEGImages", "labels", labelpath);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:597:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:598:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".BMP", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:598:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:599:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:599:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:600:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:600:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:601:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".JPeG", ".txt", labelpath);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:601:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:602:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".Jpeg", ".txt", labelpath);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:602:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:603:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".PNG", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:603:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:604:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".TIF", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:604:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:605:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".bmp", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:605:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:606:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".jpeg", ".txt", labelpath);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:606:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:607:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:607:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:608:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".png", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:608:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:609:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".tif", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:609:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_tags_paths(char**, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:640:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(paths[i], "images", "labels", label);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:640:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:641:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(label, ".jpg", ".txt", label);
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:641:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kimage get_segmentation_image(char*, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:679:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(path, "images", "mask", labelpath);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:679:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:680:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "JPEGImages", "mask", labelpath);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:680:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:681:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:681:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:682:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:682:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:683:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:683:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kimage get_segmentation_image2(char*, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:706:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(path, "images", "mask", labelpath);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:706:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:707:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, "JPEGImages", "mask", labelpath);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:707:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:708:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:708:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:709:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPG", ".txt", labelpath);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:709:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:710:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:710:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_seg(int, char**, int, int, int, int, int, int, float, float, float, float, float, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:745:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:751:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.y.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_iseg(int, char**, int, int, int, int, int, int, int, int, float, float, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:793:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_mask(int, char**, int, int, int, int, int, int, int, int, float, float, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:833:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_region(int, char**, int, int, int, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:873:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_compare(int, char**, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:927:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:936:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         d.X.vals[i] = calloc(d.X.cols, sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:945:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(paths[i*2],   "imgs", "labels", imlabel1);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:945:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:946:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(imlabel1, "jpg", "txt", imlabel1);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:946:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:953:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(paths[i*2+1], "imgs", "labels", imlabel2);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:953:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:954:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(imlabel2, "jpg", "txt", imlabel2);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:954:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_swag(char**, int, int, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:998:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_detection(int, char**, int, int, int, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1044:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kpthread_t load_data_in_thread(load_args)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1138:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kload_args*[m[Kâ€™ [-fpermissive]
     struct load_args *ptr = calloc(1, sizeof(struct load_args));
[01;32m[K                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid* load_threads(void*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1152:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdata*[m[Kâ€™ [-fpermissive]
     data *buffers = calloc(args.threads, sizeof(data));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1153:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t* {aka long unsigned int*}[m[Kâ€™ [-fpermissive]
     pthread_t *threads = calloc(args.threads, sizeof(pthread_t));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid load_data_blocking(load_args)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1175:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kload_args*[m[Kâ€™ [-fpermissive]
     struct load_args *ptr = calloc(1, sizeof(struct load_args));
[01;32m[K                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kpthread_t load_data(load_args)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1183:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kload_args*[m[Kâ€™ [-fpermissive]
     struct load_args *ptr = calloc(1, sizeof(struct load_args));
[01;32m[K                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_writing(char**, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1192:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char **replace_paths = find_replace_paths(paths, n, ".png", "-label.png");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1192:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_super(char**, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1237:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(n, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1241:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.y.vals = calloc(n, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata select_data(data*, int*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1283:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(orig[0].X.rows, sizeof(float *));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1284:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.y.vals = calloc(orig[0].y.rows, sizeof(float *));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata* tile_data(data, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1295:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdata*[m[Kâ€™ [-fpermissive]
     data *ds = calloc(divs*divs, sizeof(data));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1305:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
         d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata resize_data(data, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1329:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     d.X.vals = calloc(d.X.rows, sizeof(float*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix concat_matrix(matrix, matrix)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1372:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     m.vals = calloc(m1.rows + m2.rows, sizeof(float*));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata get_random_data(data, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1637:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     r.X.vals = calloc(num, sizeof(float *));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1638:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     r.y.vals = calloc(num, sizeof(float *));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata* split_data(data, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1651:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdata*[m[Kâ€™ [-fpermissive]
     data *split = calloc(2, sizeof(data));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1664:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     train.X.vals = calloc(train.X.rows, sizeof(float*));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1665:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     test.X.vals = calloc(test.X.rows, sizeof(float*));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1666:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     train.y.vals = calloc(train.y.rows, sizeof(float*));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1667:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     test.y.vals = calloc(test.y.rows, sizeof(float*));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:[m[K In function â€˜[01m[Klayer make_deconvolutional_layer(int, int, int, int, int, int, int, int, ACTIVATION, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:38:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:52:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weights = calloc(c*n*size*size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:53:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weight_updates = calloc(c*n*size*size, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:55:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.biases = calloc(n, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:56:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.bias_updates = calloc(n, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:75:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:76:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta  = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:85:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scales = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:86:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_updates = calloc(n, sizeof(float));
[01;32m[K                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:91:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.mean = calloc(n, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:92:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.variance = calloc(n, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:94:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.mean_delta = calloc(n, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:95:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.variance_delta = calloc(n, sizeof(float));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:97:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.rolling_mean = calloc(n, sizeof(float));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:98:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.rolling_variance = calloc(n, sizeof(float));
[01;32m[K                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:99:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.x = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:100:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.x_norm = calloc(l.batch*l.outputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:103:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.m = calloc(c*n*size*size, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:104:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.v = calloc(c*n*size*size, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:105:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.bias_m = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:106:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_m = calloc(n, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:107:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.bias_v = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:108:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l.scale_v = calloc(n, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_deconvolutional_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:193:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:194:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta  = realloc(l->delta,  l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:196:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l->x = realloc(l->x, l->batch*l->outputs*sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:197:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         l->x_norm  = realloc(l->x_norm, l->batch*l->outputs*sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:[m[K In function â€˜[01m[Kvoid demo(char*, char*, float, int, const char*, char**, int, int, char*, int, float, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:206:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     predictions = calloc(demo_frame, sizeof(float*));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:208:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         predictions[i] = calloc(demo_total, sizeof(float));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:210:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     avg = calloc(demo_total, sizeof(float));
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:230:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         make_window("Demo", 1352, 1013, fullscreen);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:[m[K In function â€˜[01m[Kdetection_layer make_detection_layer(int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:16:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     detection_layer l = {0};
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cost = calloc(1, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:32:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:33:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:[m[K In function â€˜[01m[Kvoid forward_detection_layer(detection_layer, network)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:186:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
             float *costs = calloc(l.batch*locations*l.n, sizeof(float));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:[m[K In function â€˜[01m[Kfloat* random_matrix(int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:33:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *m = calloc(rows*cols, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:[m[K In function â€˜[01m[Kvoid time_gpu(int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:231:9:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[KcudaError_t cudaThreadSynchronize()[m[Kâ€™ is deprecated [-Wdeprecated-declarations]
         cudaThreadSynchronize();
[01;32m[K         ^[m[K
In file included from [01m[K/usr/local/cuda-10.2/include/channel_descriptor.h:61:0[m[K,
                 from [01m[K/usr/local/cuda-10.2/include/cuda_runtime.h:95[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/include/darknet.h:11[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.h:5[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:2[m[K:
[01m[K/usr/local/cuda-10.2/include/cuda_runtime_api.h:957:57:[m[K [01;36m[Knote: [m[Kdeclared here
 extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:231:9:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[KcudaError_t cudaThreadSynchronize()[m[Kâ€™ is deprecated [-Wdeprecated-declarations]
         cudaThreadSynchronize();
[01;32m[K         ^[m[K
In file included from [01m[K/usr/local/cuda-10.2/include/channel_descriptor.h:61:0[m[K,
                 from [01m[K/usr/local/cuda-10.2/include/cuda_runtime.h:95[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/include/darknet.h:11[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.h:5[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:2[m[K:
[01m[K/usr/local/cuda-10.2/include/cuda_runtime_api.h:957:57:[m[K [01;36m[Knote: [m[Kdeclared here
 extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:231:31:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[KcudaError_t cudaThreadSynchronize()[m[Kâ€™ is deprecated [-Wdeprecated-declarations]
         cudaThreadSynchronize();
[01;32m[K                               ^[m[K
In file included from [01m[K/usr/local/cuda-10.2/include/channel_descriptor.h:61:0[m[K,
                 from [01m[K/usr/local/cuda-10.2/include/cuda_runtime.h:95[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/include/darknet.h:11[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.h:5[m[K,
                 from [01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:2[m[K:
[01m[K/usr/local/cuda-10.2/include/cuda_runtime_api.h:957:57:[m[K [01;36m[Knote: [m[Kdeclared here
 extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:[m[K In function â€˜[01m[Kdropout_layer make_dropout_layer(int, int, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:9:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     dropout_layer l = {0};
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:15:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.rand = calloc(inputs*batch, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_dropout_layer(dropout_layer*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:30:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->rand = realloc(l->rand, l->inputs*l->batch*sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:[m[K In function â€˜[01m[Klayer make_gru_layer(int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:33:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:39:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.uz = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:44:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.wz = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:49:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.ur = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:54:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.wr = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:61:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.uh = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:66:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.wh = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:75:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(outputs*batch*steps, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:76:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(outputs*batch*steps, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:77:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.state = calloc(outputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:78:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.prev_state = calloc(outputs*batch, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:79:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.forgot_state = calloc(outputs*batch, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:80:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.forgot_delta = calloc(outputs*batch, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:82:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.r_cpu = calloc(outputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:83:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.z_cpu = calloc(outputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:84:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.h_cpu = calloc(outputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage** load_alphabet()[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:227:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage**[m[Kâ€™ [-fpermissive]
     image **alphabets = calloc(nsize, sizeof(image));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:229:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
         alphabets[j] = calloc(128, sizeof(image));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kvoid normalize_image2(image)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:488:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *min = calloc(p.c, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:489:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *max = calloc(p.c, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage copy_image(image)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:523:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     copy.data = calloc(p.h*p.w*p.c, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kvoid save_image_options(image, const char*, IMTYPE, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:564:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kunsigned char*[m[Kâ€™ [-fpermissive]
     unsigned char *data = calloc(im.w*im.h*im.c, sizeof(char));
[01;32m[K                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage make_image(int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:617:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     out.data = calloc(h*w*c, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage make_random_image(int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:624:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     out.data = calloc(h*w*c, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kvoid composite_3d(char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/image.cpp:773:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(!out) out = "out";
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:[m[K In function â€˜[01m[Klayer make_iseg_layer(int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:15:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:27:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cost = calloc(1, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:31:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:32:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:34:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     l.counts = calloc(90, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:35:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     l.sums = calloc(90, sizeof(float*));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:39:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
             l.sums[i] = calloc(ids, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_iseg_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:66:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:67:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta = realloc(l->delta, l->batch*l->outputs*sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:[m[K In function â€˜[01m[Kvoid forward_iseg_layer(layer, network)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:130:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         float *mse = calloc(90, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:[m[K In function â€˜[01m[Klayer make_l2norm_layer(int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:15:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:20:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(inputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:21:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.scales = calloc(inputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:22:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(inputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/list.cpp:[m[K In function â€˜[01m[Klist* make_list()[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/list.cpp:7:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klist*[m[Kâ€™ [-fpermissive]
  list *l = malloc(sizeof(list));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/list.cpp:[m[K In function â€˜[01m[Kvoid list_insert(list*, void*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/list.cpp:42:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knode*[m[Kâ€™ [-fpermissive]
  node *new_node = malloc(sizeof(node));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/list.cpp:[m[K In function â€˜[01m[Kvoid** list_to_array(list*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/list.cpp:84:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kvoid**[m[Kâ€™ [-fpermissive]
     void **a = calloc(l->size, sizeof(void*));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:[m[K In function â€˜[01m[Klayer make_logistic_layer(int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:15:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:20:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.loss = calloc(inputs*batch, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:21:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(inputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:22:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(inputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:23:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cost = calloc(1, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kfloat matrix_topk_accuracy(matrix, matrix, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:19:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(k, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix resize_matrix(matrix, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:52:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
         m.vals = realloc(m.vals, size*sizeof(float*));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:54:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
             m.vals[i] = calloc(m.cols, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:60:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
         m.vals = realloc(m.vals, size*sizeof(float*));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix copy_matrix(matrix)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:82:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     c.vals = calloc(c.rows, sizeof(float *));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:85:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         c.vals[i] = calloc(c.cols, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix make_matrix(int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:97:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     m.vals = calloc(m.rows, sizeof(float *));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:99:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         m.vals[i] = calloc(m.cols, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix hold_out_matrix(matrix*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:110:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     h.vals = calloc(h.rows, sizeof(float *));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kfloat* pop_column(matrix*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:121:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *col = calloc(m->rows, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix csv_to_matrix(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:145:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     m.vals = calloc(size, sizeof(float*));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:150:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
             m.vals = realloc(m.vals, size*sizeof(float*));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:156:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     m.vals = realloc(m.vals, n*sizeof(float*));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:[m[K In function â€˜[01m[Klocal_layer make_local_layer(int, int, int, int, int, int, int, int, ACTIVATION)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:29:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     local_layer l = {0};
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:50:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weights = calloc(c*n*size*size*locations, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:51:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.weight_updates = calloc(c*n*size*size*locations, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:53:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.biases = calloc(l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:54:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.bias_updates = calloc(l.outputs, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:60:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(l.batch*out_h * out_w * n, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:61:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta  = calloc(l.batch*out_h * out_w * n, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:[m[K In function â€˜[01m[Klayer make_lstm_layer(int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:33:19:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = { 0 };
[01;32m[K                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:39:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.uf = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:44:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.ui = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:49:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.ug = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:54:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.uo = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:59:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.wf = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:64:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.wi = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:69:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.wg = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:74:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.wo = malloc(sizeof(layer));
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:82:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(outputs*batch*steps, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:83:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.state = calloc(outputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:88:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.prev_state_cpu =  calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:89:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.prev_cell_cpu =   calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:90:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cell_cpu =        calloc(batch*outputs*steps, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:92:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.f_cpu =           calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:93:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.i_cpu =           calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:94:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.g_cpu =           calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:95:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.o_cpu =           calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:96:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.c_cpu =           calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:97:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.h_cpu =           calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:98:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.temp_cpu =        calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:99:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.temp2_cpu =       calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:100:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.temp3_cpu =       calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:101:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.dc_cpu =          calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:102:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.dh_cpu =          calloc(batch*outputs, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:[m[K In function â€˜[01m[Kmetadata get_metadata(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:40:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:41:68:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(!name_list) name_list = option_find_str(options, "labels", 0);
[01;32m[K                                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:47:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     m.classes = option_find_int(options, "classes", 2);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:[m[K In function â€˜[01m[Kvoid option_insert(list*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:72:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kkvp*[m[Kâ€™ [-fpermissive]
     kvp *p = malloc(sizeof(kvp));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:[m[K In function â€˜[01m[Kmaxpool_layer make_maxpool_layer(int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:23:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     maxpool_layer l = {0};
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:38:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     l.indexes = calloc(output_size, sizeof(int));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:39:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output =  calloc(output_size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:40:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta =   calloc(output_size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_maxpool_layer(maxpool_layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:65:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     l->indexes = realloc(l->indexes, output_size * sizeof(int));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:66:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, output_size * sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:67:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta = realloc(l->delta, output_size * sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kfloat get_current_rate(network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:95:19:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     if (batch_num < net->burn_in) return net->learning_rate * pow((float)batch_num / net->burn_in, net->power);
[01;32m[K                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:104:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
                 if(net->steps[i] > batch_num) return rate;
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kchar* get_layer_string(LAYER_TYPE)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:126:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "convolutional";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:128:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "activation";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:130:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "local";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:132:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "deconvolutional";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:134:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "connected";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:136:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "rnn";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:138:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "gru";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:140:13:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
      return "lstm";
[01;32m[K             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:142:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "crnn";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:144:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "maxpool";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:146:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "reorg";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:148:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "avgpool";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:150:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "softmax";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:152:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "detection";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:154:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "region";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:156:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "yolo";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:158:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "dropout";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:160:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "crop";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:162:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "cost";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:164:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "route";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:166:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "shortcut";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:168:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "normalization";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:170:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             return "batchnorm";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:174:12:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     return "none";
[01;32m[K            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Knetwork* make_network(int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:179:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork*[m[Kâ€™ [-fpermissive]
     network *net = calloc(1, sizeof(network));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:181:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     net->layers = calloc(net->n, sizeof(layer));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:182:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ksize_t* {aka long unsigned int*}[m[Kâ€™ [-fpermissive]
     net->seen = calloc(1, sizeof(size_t));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:183:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     net->t    = calloc(1, sizeof(int));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:184:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     net->cost = calloc(1, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kint resize_network(network*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:417:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     net->input = calloc(net->inputs*net->batch, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:418:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     net->truth = calloc(net->truths*net->batch, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:430:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         net->workspace = calloc(1, workspace_size);
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Klayer get_network_detection_layer(network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:449:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kdetection* make_network_boxes(network*, float, int*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:532:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdetection*[m[Kâ€™ [-fpermissive]
     detection *dets = calloc(nboxes, sizeof(detection));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:534:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         dets[i].prob = calloc(l.classes, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:536:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
             dets[i].mask = calloc(l.coords-4, sizeof(float));
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kmatrix network_predict_data_multi(network*, data, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:596:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *X = calloc(net->batch*test.X.rows, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kmatrix network_predict_data(network*, data)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/network.cpp:621:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *X = calloc(net->batch*test.X.cols, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:[m[K In function â€˜[01m[Klayer make_normalization_layer(int, int, int, int, int, float, float, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:9:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer layer = {0};
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:19:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer.output = calloc(h * w * c * batch, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:20:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer.delta = calloc(h * w * c * batch, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:21:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer.squared = calloc(h * w * c * batch, sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:22:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer.norms = calloc(h * w * c * batch, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_normalization_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:50:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer->output = realloc(layer->output, h * w * c * batch * sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:51:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer->delta = realloc(layer->delta, h * w * c * batch * sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:52:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer->squared = realloc(layer->squared, h * w * c * batch * sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:53:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     layer->norms = realloc(layer->norms, h * w * c * batch * sizeof(float));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klocal_layer parse_local(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:134:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int n = option_find_int(options, "filters",1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:135:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int size = option_find_int(options, "size",1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:136:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int stride = option_find_int(options, "stride",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:137:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int pad = option_find_int(options, "pad",0);
[01;32m[K                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:138:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "logistic");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:138:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_deconvolutional(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:155:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int n = option_find_int(options, "filters",1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:156:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int size = option_find_int(options, "size",1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:157:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int stride = option_find_int(options, "stride",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:159:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "logistic");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:159:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:168:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batch_normalize = option_find_int_quiet(options, "batch_normalize", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:169:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int pad = option_find_int_quiet(options, "pad",0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:170:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int padding = option_find_int_quiet(options, "padding",0);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kconvolutional_layer parse_convolutional(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:181:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int n = option_find_int(options, "filters",1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:182:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int size = option_find_int(options, "size",1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:183:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int stride = option_find_int(options, "stride",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:184:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int pad = option_find_int_quiet(options, "pad",0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:185:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int padding = option_find_int_quiet(options, "padding",0);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:186:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int groups = option_find_int_quiet(options, "groups", 1);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:189:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "logistic");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:189:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:198:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batch_normalize = option_find_int_quiet(options, "batch_normalize", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:199:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int binary = option_find_int_quiet(options, "binary", 0);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:200:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int xnor = option_find_int_quiet(options, "xnor", 0);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:203:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.flipped = option_find_int_quiet(options, "flipped", 0);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:204:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.dot = option_find_float_quiet(options, "dot", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_crnn(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:211:69:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int output_filters = option_find_int(options, "output_filters",1);
[01;32m[K                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:212:69:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int hidden_filters = option_find_int(options, "hidden_filters",1);
[01;32m[K                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:213:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "logistic");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:213:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:215:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batch_normalize = option_find_int_quiet(options, "batch_normalize", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:219:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.shortcut = option_find_int_quiet(options, "shortcut", 0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_rnn(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:226:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int output = option_find_int(options, "output",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:227:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "logistic");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:227:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:229:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batch_normalize = option_find_int_quiet(options, "batch_normalize", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:233:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.shortcut = option_find_int_quiet(options, "shortcut", 0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_gru(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:240:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int output = option_find_int(options, "output",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:241:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batch_normalize = option_find_int_quiet(options, "batch_normalize", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:244:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.tanh = option_find_int_quiet(options, "tanh", 0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_lstm(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:251:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int output = option_find_int(options, "output", 1);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:252:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batch_normalize = option_find_int_quiet(options, "batch_normalize", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_connected(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:261:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int output = option_find_int(options, "output",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:262:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "logistic");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:262:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:264:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batch_normalize = option_find_int_quiet(options, "batch_normalize", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_softmax(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:272:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int groups = option_find_int_quiet(options, "groups",1);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:274:70:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.temperature = option_find_float_quiet(options, "temperature", 1);
[01;32m[K                                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:275:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *tree_file = option_find_str(options, "tree", 0);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:280:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.spatial = option_find_float_quiet(options, "spatial", 0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:281:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.noloss =  option_find_int_quiet(options, "noloss", 0);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kint* parse_yolo_mask(char*, int*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:295:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         mask = calloc(n, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_yolo(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:308:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 20);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:309:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int total = option_find_int(options, "num", 1);
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:312:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *a = option_find_str(options, "mask", 0);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:317:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.max_boxes = option_find_int_quiet(options, "max",90);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:318:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.jitter = option_find_float(options, "jitter", .2);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:320:69:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.ignore_thresh = option_find_float(options, "ignore_thresh", .5);
[01;32m[K                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:321:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.truth_thresh = option_find_float(options, "truth_thresh", 1);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:322:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.random = option_find_int_quiet(options, "random", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:324:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *map_file = option_find_str(options, "map", 0);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:327:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     a = option_find_str(options, "anchors", 0);
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_iseg(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:346:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 20);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:347:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int ids = option_find_int(options, "ids", 32);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_region(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:355:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int coords = option_find_int(options, "coords", 4);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:356:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 20);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:357:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int num = option_find_int(options, "num", 1);
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:362:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.log = option_find_int_quiet(options, "log", 0);
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:363:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.sqrt = option_find_int_quiet(options, "sqrt", 0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:365:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.softmax = option_find_int(options, "softmax", 0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:366:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.background = option_find_int_quiet(options, "background", 0);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:367:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.max_boxes = option_find_int_quiet(options, "max",30);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:368:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.jitter = option_find_float(options, "jitter", .2);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:369:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.rescore = option_find_int_quiet(options, "rescore",0);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:371:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.thresh = option_find_float(options, "thresh", .5);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:372:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.classfix = option_find_int_quiet(options, "classfix", 0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:373:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.absolute = option_find_int_quiet(options, "absolute", 0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:374:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.random = option_find_int_quiet(options, "random", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:376:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.coord_scale = option_find_float(options, "coord_scale", 1);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:377:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.object_scale = option_find_float(options, "object_scale", 1);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:378:70:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.noobject_scale = option_find_float(options, "noobject_scale", 1);
[01;32m[K                                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:379:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.mask_scale = option_find_float(options, "mask_scale", 1);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:380:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.class_scale = option_find_float(options, "class_scale", 1);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:381:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.bias_match = option_find_int_quiet(options, "bias_match",0);
[01;32m[K                                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:383:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *tree_file = option_find_str(options, "tree", 0);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:385:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *map_file = option_find_str(options, "map", 0);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:388:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *a = option_find_str(options, "anchors", 0);
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kdetection_layer parse_detection(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:407:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int coords = option_find_int(options, "coords", 1);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:408:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 1);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:409:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int rescore = option_find_int(options, "rescore", 0);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:410:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int num = option_find_int(options, "num", 1);
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:411:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int side = option_find_int(options, "side", 7);
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:414:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.softmax = option_find_int(options, "softmax", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:415:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.sqrt = option_find_int(options, "sqrt", 0);
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:417:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.max_boxes = option_find_int_quiet(options, "max",90);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:418:68:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.coord_scale = option_find_float(options, "coord_scale", 1);
[01;32m[K                                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:419:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.forced = option_find_int(options, "forced", 0);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:420:70:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.object_scale = option_find_float(options, "object_scale", 1);
[01;32m[K                                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:421:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.noobject_scale = option_find_float(options, "noobject_scale", 1);
[01;32m[K                                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:422:68:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.class_scale = option_find_float(options, "class_scale", 1);
[01;32m[K                                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:423:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.jitter = option_find_float(options, "jitter", .2);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:424:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.random = option_find_int_quiet(options, "random", 0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:425:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.reorg = option_find_int_quiet(options, "reorg", 0);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kcost_layer parse_cost(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:431:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *type_s = option_find_str(options, "type", "sse");
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:431:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:433:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float scale = option_find_float_quiet(options, "scale",1);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:435:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.ratio =  option_find_float_quiet(options, "ratio",0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:436:72:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.noobject_scale =  option_find_float_quiet(options, "noobj", 1);
[01;32m[K                                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:437:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     layer.thresh =  option_find_float_quiet(options, "thresh",0);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kcrop_layer parse_crop(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:443:63:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int crop_height = option_find_int(options, "crop_height",1);
[01;32m[K                                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:444:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int crop_width = option_find_int(options, "crop_width",1);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:445:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int flip = option_find_int(options, "flip",0);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:446:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float angle = option_find_float(options, "angle",0);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:447:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float saturation = option_find_float(options, "saturation",1);
[01;32m[K                                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:448:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float exposure = option_find_float(options, "exposure",1);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:457:63:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int noadjust = option_find_int_quiet(options, "noadjust",0);
[01;32m[K                                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:460:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.shift = option_find_float(options, "shift", 0);
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_reorg(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:467:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int stride = option_find_int(options, "stride",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:468:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int reverse = option_find_int_quiet(options, "reverse",0);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:469:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int flatten = option_find_int_quiet(options, "flatten",0);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:470:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int extra = option_find_int_quiet(options, "extra",0);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kmaxpool_layer parse_maxpool(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:485:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int stride = option_find_int(options, "stride",1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:486:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int size = option_find_int(options, "size",stride);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:487:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int padding = option_find_int_quiet(options, "padding", size-1);
[01;32m[K                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kdropout_layer parse_dropout(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:515:69:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float probability = option_find_float(options, "probability", .5);
[01;32m[K                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_normalization(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:525:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float alpha = option_find_float(options, "alpha", .0001);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:526:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float beta =  option_find_float(options, "beta" , .75);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:527:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float kappa = option_find_float(options, "kappa", 1);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:528:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int size = option_find_int(options, "size", 5);
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_shortcut(list*, size_params, network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:541:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *l = option_find(options, "from");
[01;32m[K                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:550:73:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "linear");
[01;32m[K                                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:550:73:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:553:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     s.alpha = option_find_float_quiet(options, "alpha", 1);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:554:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     s.beta = option_find_float_quiet(options, "beta", 1);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_activation(list*, size_params)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:580:73:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *activation_s = option_find_str(options, "activation", "linear");
[01;32m[K                                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:580:73:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_upsample(list*, size_params, network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:595:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int stride = option_find_int(options, "stride",2);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:597:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     l.scale = option_find_float_quiet(options, "scale", 1);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kroute_layer parse_route(list*, size_params, network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:603:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *l = option_find(options, "layers");
[01;32m[K                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:612:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *layers = calloc(n, sizeof(int));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:613:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *sizes = calloc(n, sizeof(int));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kvoid parse_net_options(list*, network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:657:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->batch = option_find_int(options, "batch",1);
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:658:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->learning_rate = option_find_float(options, "learning_rate", .001);
[01;32m[K                                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:659:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->momentum = option_find_float(options, "momentum", .9);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:660:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->decay = option_find_float(options, "decay", .0001);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:661:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int subdivs = option_find_int(options, "subdivisions",1);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:662:68:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->time_steps = option_find_int_quiet(options, "time_steps",1);
[01;32m[K                                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:663:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->notruth = option_find_int_quiet(options, "notruth",0);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:667:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->random = option_find_int_quiet(options, "random", 0);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:669:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->adam = option_find_int_quiet(options, "adam", 0);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:671:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->B1 = option_find_float(options, "B1", .9);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:672:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->B2 = option_find_float(options, "B2", .999);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:673:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->eps = option_find_float(options, "eps", .0000001);
[01;32m[K                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:676:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->h = option_find_int_quiet(options, "height",0);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:677:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->w = option_find_int_quiet(options, "width",0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:678:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->c = option_find_int_quiet(options, "channels",0);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:679:84:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->inputs = option_find_int_quiet(options, "inputs", net->h * net->w * net->c);
[01;32m[K                                                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:680:71:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->max_crop = option_find_int_quiet(options, "max_crop",net->w*2);
[01;32m[K                                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:681:69:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->min_crop = option_find_int_quiet(options, "min_crop",net->w);
[01;32m[K                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:682:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->max_ratio = option_find_float_quiet(options, "max_ratio", (float) net->max_crop / net->w);
[01;32m[K                                                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:683:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->min_ratio = option_find_float_quiet(options, "min_ratio", (float) net->min_crop / net->w);
[01;32m[K                                                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:684:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->center = option_find_int_quiet(options, "center",0);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:685:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->clip = option_find_float_quiet(options, "clip", 0);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:687:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->angle = option_find_float_quiet(options, "angle", 0);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:688:63:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->aspect = option_find_float_quiet(options, "aspect", 1);
[01;32m[K                                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:689:71:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->saturation = option_find_float_quiet(options, "saturation", 1);
[01;32m[K                                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:690:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->exposure = option_find_float_quiet(options, "exposure", 1);
[01;32m[K                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:691:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->hue = option_find_float_quiet(options, "hue", 0);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:695:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *policy_s = option_find_str(options, "policy", "constant");
[01;32m[K                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:695:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:697:63:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->burn_in = option_find_int_quiet(options, "burn_in", 0);
[01;32m[K                                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:698:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->power = option_find_float_quiet(options, "power", 4);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:700:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->step = option_find_int(options, "step", 1);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:701:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->scale = option_find_float(options, "scale", 1);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:703:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         char *l = option_find(options, "steps");
[01;32m[K                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:704:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         char *p = option_find(options, "scales");
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:713:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         int *steps = calloc(n, sizeof(int));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:714:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         float *scales = calloc(n, sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:727:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->gamma = option_find_float(options, "gamma", 1);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:729:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->gamma = option_find_float(options, "gamma", 1);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:730:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         net->step = option_find_int(options, "step", 1);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:733:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     net->max_batches = option_find_int(options, "max_batches", 0);
[01;32m[K                                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Knetwork* parse_network_cfg(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:774:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
         layer l = {0};
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:841:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.truth = option_find_int_quiet(options, "truth", 0);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:842:72:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.onlyforward = option_find_int_quiet(options, "onlyforward", 0);
[01;32m[K                                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:843:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.stopbackward = option_find_int_quiet(options, "stopbackward", 0);
[01;32m[K                                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:844:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.dontsave = option_find_int_quiet(options, "dontsave", 0);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:845:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.dontload = option_find_int_quiet(options, "dontload", 0);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:846:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.numload = option_find_int_quiet(options, "numload", 0);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:847:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.dontloadscales = option_find_int_quiet(options, "dontloadscales", 0);
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:848:84:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.learning_rate_scale = option_find_float_quiet(options, "learning_rate", 1);
[01;32m[K                                                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:849:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         l.smooth = option_find_float_quiet(options, "smooth", 0);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:869:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     net->input = calloc(net->inputs*net->batch, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:870:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     net->truth = calloc(net->truths*net->batch, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:882:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
             net->workspace = calloc(1, workspace_size);
[01;32m[K                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klist* read_cfg(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:904:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ksection*[m[Kâ€™ [-fpermissive]
                 current = malloc(sizeof(section));
[01;32m[K                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kvoid transpose_matrix(float*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:1087:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *transpose = calloc(rows*cols, sizeof(float));
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:[m[K In function â€˜[01m[Klayer make_region_layer(int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:15:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:28:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cost = calloc(1, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:29:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.biases = calloc(n*2, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:30:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.bias_updates = calloc(n*2, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:34:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:35:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_region_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:64:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:65:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta = realloc(l->delta, l->batch*l->outputs*sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:[m[K In function â€˜[01m[Klayer make_reorg_layer(int, int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:10:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:43:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output =  calloc(output_size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:44:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta =   calloc(output_size, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_reorg_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:80:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, output_size * sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:81:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta = realloc(l->delta, output_size * sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:[m[K In function â€˜[01m[Klayer make_rnn_layer(int, int, int, int, ACTIVATION, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:33:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:39:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.state = calloc(batch*outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:40:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.prev_state = calloc(batch*outputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:42:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.input_layer = malloc(sizeof(layer));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:47:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.self_layer = malloc(sizeof(layer));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:52:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [-fpermissive]
     l.output_layer = malloc(sizeof(layer));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:[m[K In function â€˜[01m[Kroute_layer make_route_layer(int, int, int*, int*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:10:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     route_layer l = {0};
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:25:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta =  calloc(outputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:26:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(outputs*batch, sizeof(float));;
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_route_layer(route_layer*, network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:62:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta =  realloc(l->delta, l->outputs*l->batch*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:63:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->outputs*l->batch*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:[m[K In function â€˜[01m[Klayer make_upsample_layer(int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:9:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:27:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta =  calloc(l.outputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:28:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(l.outputs*batch, sizeof(float));;
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_upsample_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:56:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta =  realloc(l->delta, l->outputs*l->batch*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:57:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->outputs*l->batch*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kint* read_intlist(char*, int*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:46:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         gpus = calloc(*ngpus, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:52:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         gpus = calloc(1, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kint* read_map(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:68:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         map = realloc(map, n*sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kvoid sorta_shuffle(void*, size_t, size_t, size_t)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:81:32:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [-Wpointer-arith]
         shuffle(arr+(start*size), num, size);
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kvoid shuffle(void*, size_t, size_t)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:91:41:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [-Wpointer-arith]
         memcpy(swp,          arr+(j*size), size);
[01;32m[K                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:92:27:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [-Wpointer-arith]
         memcpy(arr+(j*size), arr+(i*size), size);
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:92:41:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [-Wpointer-arith]
         memcpy(arr+(j*size), arr+(i*size), size);
[01;32m[K                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:93:27:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [-Wpointer-arith]
         memcpy(arr+(i*size), swp,          size);
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kint* random_index_order(int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:99:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *inds = calloc(max-min, sizeof(int));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kunsigned char* read_file(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:269:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kunsigned char*[m[Kâ€™ [-fpermissive]
     unsigned char *text = calloc(size+1, sizeof(char));
[01;32m[K                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kchar* fgetl(FILE*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:339:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [-fpermissive]
     char *line = malloc(size*sizeof(char));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:350:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [-fpermissive]
             line = realloc(line, size*sizeof(char));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kchar* copy_string(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:425:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [-fpermissive]
     char *copy = malloc(strlen(s)+1);
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kfloat* parse_fields(char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:461:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *field = calloc(n, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kfloat** one_hot_encode(float*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:718:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [-fpermissive]
     float **t = calloc(n, sizeof(float*));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:720:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         t[i] = calloc(k, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:[m[K In function â€˜[01m[Klayer make_shortcut_layer(int, int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:12:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:26:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta =  calloc(l.outputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:27:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(l.outputs*batch, sizeof(float));;
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_shortcut_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:49:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta =  realloc(l->delta, l->outputs*l->batch*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:50:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->outputs*l->batch*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:[m[K In function â€˜[01m[Ksoftmax_layer make_softmax_layer(int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:15:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     softmax_layer l = {0};
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:21:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.loss = calloc(inputs*batch, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:22:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(inputs*batch, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:23:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(inputs*batch, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:24:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cost = calloc(1, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:[m[K In function â€˜[01m[Kvoid demo_art(char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:15:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *window = "ArtJudgementBot9000!!!";
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:[m[K In function â€˜[01m[Kvoid run_art(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:54:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:[m[K In function â€˜[01m[Ktree* read_tree(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:94:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [-fpermissive]
         char *id = calloc(256, sizeof(char));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:97:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         t.parent = realloc(t.parent, (n+1)*sizeof(int));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:100:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         t.child = realloc(t.child, (n+1)*sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:103:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
         t.name = realloc(t.name, (n+1)*sizeof(char *));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:107:37:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
             t.group_offset = realloc(t.group_offset, groups * sizeof(int));
[01;32m[K                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:109:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
             t.group_size = realloc(t.group_size, groups * sizeof(int));
[01;32m[K                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:114:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         t.group = realloc(t.group, (n+1)*sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:123:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     t.group_offset = realloc(t.group_offset, groups * sizeof(int));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:125:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     t.group_size = realloc(t.group_size, groups * sizeof(int));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:129:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     t.leaf = calloc(n, sizeof(int));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:135:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ktree*[m[Kâ€™ [-fpermissive]
     tree *tree_ptr = calloc(1, sizeof(tree));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid extend_data_truth(data*, int, float)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:10:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         d->y.vals[i] = realloc(d->y.vals[i], (d->y.cols+n)*sizeof(float));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kmatrix network_loss_data(network*, data)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:23:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *X = calloc(net->batch*test.X.cols, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:24:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *y = calloc(net->batch*test.y.cols, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid train_attention(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:63:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [-fpermissive]
     network **nets = calloc(ngpus, sizeof(network*));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:83:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = option_find_str(options, "backup", "/backup/");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:83:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:84:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:84:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:85:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_list = option_find_str(options, "train", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:85:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:86:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:127:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:155:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         int *inds = calloc(resized.y.rows, sizeof(int));
[01;32m[K                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:209:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:179:15:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kim[m[Kâ€™ set but not used [-Wunused-but-set-variable]
         image im = float_to_image(64,64,3,resized.X.vals[0]);
[01;32m[K               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid validate_attention_single(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:242:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:242:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:243:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *leaf_list = option_find_str(options, "leaves", 0);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:245:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_list = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:245:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:246:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:247:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int topk = option_find_int(options, "top", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:258:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(topk, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:262:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *avgs = calloc(classes, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:263:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *inds = calloc(divs*divs, sizeof(int));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid validate_attention_multi(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:330:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:330:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:331:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_list = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:331:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:332:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:333:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int topk = option_find_int(options, "top", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:346:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(topk, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:357:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         float *pred = calloc(classes, sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid predict_attention(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:390:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:391:85:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(!name_list) name_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:391:85:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:392:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(top == 0) top = option_find_int(options, "top", 1);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:397:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(top, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid run_attention(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:441:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *gpu_list = find_char_arg(argc, argv, "-gpus", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:446:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int top = find_int_arg(argc, argv, "-t", 0);
[01;32m[K                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:447:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:[m[K In function â€˜[01m[Kvoid train_captcha(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:39:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char **labels = get_labels("/data/captcha/reimgs.labels.list");
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:41:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         plist = get_paths("/data/captcha/reimgs.solved.list");
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:43:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         plist = get_paths("/data/captcha/reimgs.raw.list");
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:[m[K In function â€˜[01m[Kvoid test_captcha(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:99:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char **names = get_labels("/data/captcha/reimgs.labels.list");
[01;32m[K                                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:[m[K In function â€˜[01m[Kvoid valid_captcha(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:132:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char **labels = get_labels("/data/captcha/reimgs.labels.list");
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:134:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     list *plist = get_paths("/data/captcha/reimgs.fg.list");
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid train_cifar(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:12:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:16:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char **labels = get_labels("data/cifar/labels.txt");
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:19:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:26:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid train_cifar_distill(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:57:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:61:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char **labels = get_labels("data/cifar/labels.txt");
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:65:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     matrix soft = csv_to_matrix("results/ensemble.csv");
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:72:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:79:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid test_cifar_multi(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:108:83:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     data test = load_cifar10_data("data/cifar/cifar-10-batches-bin/test_batch.bin");
[01;32m[K                                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid test_cifar(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:138:83:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     data test = load_cifar10_data("data/cifar/cifar-10-batches-bin/test_batch.bin");
[01;32m[K                                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid extract_cifar()[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
 char *labels[] = {"airplane","automobile","bird","cat","deer","dog","frog","horse","ship","truck"};
[01;32m[K                                                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:98:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:154:83:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     data test = load_cifar10_data("data/cifar/cifar-10-batches-bin/test_batch.bin");
[01;32m[K                                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid test_cifar_csv(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:176:83:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     data test = load_cifar10_data("data/cifar/cifar-10-batches-bin/test_batch.bin");
[01;32m[K                                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid eval_cifar_csv()[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:221:83:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     data test = load_cifar10_data("data/cifar/cifar-10-batches-bin/test_batch.bin");
[01;32m[K                                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:223:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     matrix pred = csv_to_matrix("results/combined.csv");
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kfloat* get_regression_values(char**, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:8:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *v = calloc(n, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid train_classifier(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:26:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [-fpermissive]
     network **nets = calloc(ngpus, sizeof(network*));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:46:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = option_find_str(options, "backup", "/backup/");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:46:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:47:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int tag = option_find_int_quiet(options, "tag", 0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:48:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:48:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:49:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_list = option_find_str(options, "train", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:49:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:50:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *tree = option_find_str(options, "tree", 0);
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:52:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:99:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:146:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_crop(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:178:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:178:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:179:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_list = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:179:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:180:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:181:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int topk = option_find_int(options, "top", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_10(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:243:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:243:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:244:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_list = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:244:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:245:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:246:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int topk = option_find_int(options, "top", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:257:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(topk, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:284:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         float *pred = calloc(classes, sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_full(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:312:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:312:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:313:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_list = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:313:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:314:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:315:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int topk = option_find_int(options, "top", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:326:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(topk, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_single(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:370:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:370:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:371:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *leaf_list = option_find_str(options, "leaves", 0);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:373:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_list = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:373:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:374:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:375:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int topk = option_find_int(options, "top", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:386:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(topk, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_multi(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:429:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:429:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:430:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_list = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:430:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:431:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:432:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int topk = option_find_int(options, "top", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:446:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(topk, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:457:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
         float *pred = calloc(classes, sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid try_classifier(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:490:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:491:85:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(!name_list) name_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:491:85:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:492:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int top = option_find_int(options, "top", 1);
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:497:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(top, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid predict_classifier(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:568:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:569:85:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(!name_list) name_list = option_find_str(options, "labels", "data/labels.list");
[01;32m[K                                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:569:85:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:570:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(top == 0) top = option_find_int(options, "top", 1);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:575:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(top, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid label_classifier(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:623:76:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "names", "data/labels.list");
[01;32m[K                                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:623:76:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:624:73:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *test_list = option_find_str(options, "test", "data/train.list");
[01;32m[K                                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:624:73:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:625:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid csv_classifier(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:657:72:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *test_list = option_find_str(options, "test", "data/test.list");
[01;32m[K                                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:657:72:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:658:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int top = option_find_int(options, "top", 1);
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:665:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(top, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid test_classifier(char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:697:72:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *test_list = option_find_str(options, "test", "data/test.list");
[01;32m[K                                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:697:72:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:698:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid file_output_classifier(char*, char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:768:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 2);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid threat_classifier(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:811:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int top = option_find_int(options, "top", 1);
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:813:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:816:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(top, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid gun_classifier(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:933:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int top = option_find_int(options, "top", 1);
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:935:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:938:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(top, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:958:22:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         for(i = 0; i < sizeof(bad_cats)/sizeof(bad_cats[0]); ++i){
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:967:22:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         for(i = 0; i < sizeof(bad_cats)/sizeof(bad_cats[0]); ++i){
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid demo_classifier(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1002:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int top = option_find_int(options, "top", 1);
[01;32m[K                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1004:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *label_list = option_find_str(options, "labels", 0);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1005:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", label_list);
[01;32m[K                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1008:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *indexes = calloc(top, sizeof(int));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid run_classifier(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1067:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *gpu_list = find_char_arg(argc, argv, "-gpus", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1072:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1073:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int top = find_int_arg(argc, argv, "-t", 0);
[01;32m[K                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1074:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
 char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
[01;32m[K                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:805:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid train_coco(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:13:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_images = "data/coco.trainval.txt";
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:15:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:57:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid validate_coco(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:135:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *base = "results/";
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:136:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     list *plist = get_paths("data/coco_val_5k.list");
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:158:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:159:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:160:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:161:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:162:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t* {aka long unsigned int*}[m[Kâ€™ [-fpermissive]
     pthread_t *thr = calloc(nthreads, sizeof(pthread_t));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid validate_coco_recall(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:219:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *base = "results/comp4_det_test_";
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:220:73:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     list *plist = get_paths("/home/pjreddie/data/voc/test/2007_test.txt");
[01;32m[K                                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:228:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE** {aka _IO_FILE**}[m[Kâ€™ [-fpermissive]
     FILE **fps = calloc(classes, sizeof(FILE *));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:259:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(path, "images", "labels", labelpath);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:259:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:260:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, "JPEGImages", "labels", labelpath);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:260:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:261:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:261:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:262:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:262:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid run_coco(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:338:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *prefix = find_char_arg(argc, argv, "-prefix", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:339:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float thresh = find_float_arg(argc, argv, "-thresh", .2);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:340:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:341:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int frame_skip = find_int_arg(argc, argv, "-s", 0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:351:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int avg = find_int_arg(argc, argv, "-avg", 1);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:[m[K In function â€˜[01m[Klayer make_yolo_layer(int, int, int, int, int, int*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:16:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer l = {0};
[01;32m[K                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.cost = calloc(1, sizeof(float));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:30:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.biases = calloc(total*2, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:33:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         l.mask = calloc(n, sizeof(int));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:38:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.bias_updates = calloc(n*2, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:42:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.delta = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:43:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.output = calloc(batch*l.outputs, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_yolo_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:71:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->output = realloc(l->output, l->batch*l->outputs*sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:72:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l->delta = realloc(l->delta, l->batch*l->outputs*sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:[m[K In function â€˜[01m[Klayer normalize_layer(layer, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:269:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.scales = calloc(n, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:273:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.rolling_mean = calloc(n, sizeof(float));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:274:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     l.rolling_variance = calloc(n, sizeof(float));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:409:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     gpu_index = find_int_arg(argc, argv, "-i", 0);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:410:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     if(find_arg(argc, argv, "-nogpu")) {
[01;32m[K                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:433:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         float thresh = find_float_arg(argc, argv, "-thresh", .5);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:435:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         char *outfile = find_char_arg(argc, argv, "-out", 0);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:436:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         int fullscreen = find_arg(argc, argv, "-fullscreen");
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:437:99:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         test_detector("cfg/coco.data", argv[2], argv[3], filename, thresh, .5, outfile, fullscreen);
[01;32m[K                                                                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:447:79:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         predict_classifier("cfg/imagenet1k.data", argv[2], argv[3], argv[4], 5);
[01;32m[K                                                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid train_detector(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:9:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_images = option_find_str(options, "train", "data/train.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:9:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:10:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = option_find_str(options, "backup", "/backup/");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:10:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:16:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [-fpermissive]
     network **nets = calloc(ngpus, sizeof(network));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:62:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:66:44:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
             if (get_current_batch(net)+200 > net->max_batches) dim = 608;
[01;32m[K                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid validate_detector_flip(char*, char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:238:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_images = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:238:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:239:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", "data/names.list");
[01;32m[K                                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:239:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:240:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *prefix = option_find_str(options, "results", "results");
[01;32m[K                                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:240:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:242:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *mapf = option_find_str(options, "map", 0);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:258:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *type = option_find_str(options, "eval", "voc");
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:258:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:264:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         if(!outfile) outfile = "coco_results";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:270:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         if(!outfile) outfile = "imagenet-detection";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:276:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         if(!outfile) outfile = "comp4_det_test_";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:277:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE** {aka _IO_FILE**}[m[Kâ€™ [-fpermissive]
         fps = calloc(classes, sizeof(FILE *));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:292:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:293:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:294:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:295:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:296:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t* {aka long unsigned int*}[m[Kâ€™ [-fpermissive]
     pthread_t *thr = calloc(nthreads, sizeof(pthread_t));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid validate_detector(char*, char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:368:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *valid_images = option_find_str(options, "valid", "data/train.list");
[01;32m[K                                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:368:77:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:369:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", "data/names.list");
[01;32m[K                                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:369:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:370:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *prefix = option_find_str(options, "results", "results");
[01;32m[K                                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:370:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:372:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *mapf = option_find_str(options, "map", 0);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:388:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *type = option_find_str(options, "eval", "voc");
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:388:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:394:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         if(!outfile) outfile = "coco_results";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:400:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         if(!outfile) outfile = "imagenet-detection";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:406:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         if(!outfile) outfile = "comp4_det_test_";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:407:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE** {aka _IO_FILE**}[m[Kâ€™ [-fpermissive]
         fps = calloc(classes, sizeof(FILE *));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:423:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:424:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:425:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:426:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:427:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t* {aka long unsigned int*}[m[Kâ€™ [-fpermissive]
     pthread_t *thr = calloc(nthreads, sizeof(pthread_t));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid validate_detector_recall(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:496:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     list *plist = get_paths("data/coco_val_5k.list");
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:526:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(path, "images", "labels", labelpath);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:526:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:527:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, "JPEGImages", "labels", labelpath);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:527:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:528:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:528:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:529:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:529:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid test_detector(char*, char*, char*, char*, float, float, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:565:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", "data/names.list");
[01;32m[K                                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:565:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:612:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
             make_window("predictions", 512, 512, 0);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid run_detector(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:791:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *prefix = find_char_arg(argc, argv, "-prefix", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:792:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float thresh = find_float_arg(argc, argv, "-thresh", .5);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:793:63:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float hier_thresh = find_float_arg(argc, argv, "-hier", .5);
[01;32m[K                                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:794:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:795:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int frame_skip = find_int_arg(argc, argv, "-s", 0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:796:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int avg = find_int_arg(argc, argv, "-avg", 3);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:801:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *gpu_list = find_char_arg(argc, argv, "-gpus", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:802:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *outfile = find_char_arg(argc, argv, "-out", 0);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:814:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         gpus = calloc(ngpus, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:825:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:826:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int fullscreen = find_arg(argc, argv, "-fullscreen");
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:827:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int width = find_int_arg(argc, argv, "-w", 0);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:828:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int height = find_int_arg(argc, argv, "-h", 0);
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:829:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int fps = find_int_arg(argc, argv, "-fps", 0);
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:843:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         int classes = option_find_int(options, "classes", 20);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:844:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         char *name_list = option_find_str(options, "names", "data/names.list");
[01;32m[K                                                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:844:78:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kchar* fgetgo(FILE*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:22:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [-fpermissive]
     char *line = malloc(size*sizeof(char));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kmoves load_go_moves(char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:35:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
     m.data = calloc(128, sizeof(char*));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:42:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
             m.data = realloc(m.data, m.n*sizeof(char*));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:49:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
     m.data = realloc(m.data, count*sizeof(char*));
[01;32m[K                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid train_go(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:141:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [-fpermissive]
     network **nets = calloc(ngpus, sizeof(network*));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:156:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:165:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:187:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kint* calculate_liberties(float*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:229:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *lib = calloc(19*19, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kfloat* network_predict_rotations(network*, float*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:396:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *in = calloc(19*19*3*n, sizeof(float));
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kmcts_tree* expand(float*, float*, network*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:426:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kmcts_tree*[m[Kâ€™ [-fpermissive]
     mcts_tree *root = calloc(1, sizeof(mcts_tree));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:428:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kmcts_tree**[m[Kâ€™ [-fpermissive]
     root->children = calloc(19*19+1, sizeof(mcts_tree*));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:429:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     root->prior = calloc(19*19 + 1, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:430:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     root->prob = calloc(19*19 + 1, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:431:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     root->mean = calloc(19*19 + 1, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:432:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     root->value = calloc(19*19 + 1, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:433:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     root->visit_count = calloc(19*19 + 1, sizeof(int));
[01;32m[K                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kfloat* copy_board(float*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:456:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *next = calloc(19*19*3, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid valid_go(char*, char*, int, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:742:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *board = calloc(19*19*3, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:743:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *move = calloc(19*19+2, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid engine_go(char*, char*, int, float, float, float, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:819:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *board = calloc(19*19*3, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:821:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *one = calloc(19*19*3, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:822:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *two = calloc(19*19*3, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid test_go(char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1104:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *board = calloc(19*19*3, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1106:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *move = calloc(19*19+1, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid self_go(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1227:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork*[m[Kâ€™ [-fpermissive]
         net2 = calloc(1, sizeof(network));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1235:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *board = calloc(19*19*3, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1237:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *one = calloc(19*19*3, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1238:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *two = calloc(19*19*3, sizeof(float));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid run_go(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1328:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *gpu_list = find_char_arg(argc, argv, "-gpus", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1340:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         gpus = calloc(ngpus, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1350:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1356:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int multi = find_arg(argc, argv, "-multi");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1357:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int anon = find_arg(argc, argv, "-anon");
[01;32m[K                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1358:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int iters = find_int_arg(argc, argv, "-iters", 500);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1359:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int resign = find_int_arg(argc, argv, "-resign", 175);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1360:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float cpuct = find_float_arg(argc, argv, "-cpuct", 5);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1361:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float temp = find_float_arg(argc, argv, "-temp", .1);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1362:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float time = find_float_arg(argc, argv, "-time", 0);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:[m[K In function â€˜[01m[Kvoid train_isegmenter(char*, char*, char*, int*, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:14:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [-fpermissive]
     network **nets = calloc(ngpus, sizeof(network*));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:43:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = option_find_str(options, "backup", "/backup/");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:43:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:44:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_list = option_find_str(options, "train", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:44:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:80:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:121:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:[m[K In function â€˜[01m[Kvoid run_isegmenter(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:232:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *gpu_list = find_char_arg(argc, argv, "-gpus", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:244:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         gpus = calloc(ngpus, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:255:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:256:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:257:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int display = find_arg(argc, argv, "-display");
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid train_prog(char*, char*, char*, char*, int, int, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:519:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:547:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *ls[2] = {"imagenet", "zzzzzzzz"};
[01;32m[K                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:547:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:563:36:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while (get_current_batch(gnet) < maxbatch) {
[01;32m[K                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid train_dcgan(char*, char*, char*, char*, int, int, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:675:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:685:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer imlayer = {0};
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:711:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *ls[2] = {"imagenet", "zzzzzzzz"};
[01;32m[K                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:711:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:731:36:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while (get_current_batch(gnet) < maxbatch) {
[01;32m[K                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid train_colorizer(char*, char*, char*, char*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:871:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_images = "/home/pjreddie/data/imagenet/imagenet1k.train.list";
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:872:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:881:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [-fpermissive]
     layer imlayer = {0};
[01;32m[K                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:907:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *ls[2] = {"imagenet"};
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:917:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *pixs = calloc(x_size, sizeof(float));
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:918:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *graypixs = calloc(x_size, sizeof(float));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:932:35:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while (get_current_batch(net) < net->max_batches) {
[01;32m[K                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid run_lsd(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1354:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1355:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int display = find_arg(argc, argv, "-display");
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1356:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int batches = find_int_arg(argc, argv, "-b", 0);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1357:105:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *file = find_char_arg(argc, argv, "-file", "/home/pjreddie/data/imagenet/imagenet1k.train.list");
[01;32m[K                                                                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1357:105:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:[m[K In function â€˜[01m[Kvoid run_nightmare(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:301:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int range = find_int_arg(argc, argv, "-range", 1);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:302:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int norm = find_int_arg(argc, argv, "-norm", 1);
[01;32m[K                                                   ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:303:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int rounds = find_int_arg(argc, argv, "-rounds", 1);
[01;32m[K                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:304:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int iters = find_int_arg(argc, argv, "-iters", 10);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:305:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int octaves = find_int_arg(argc, argv, "-octaves", 4);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:306:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float zoom = find_float_arg(argc, argv, "-zoom", 1.);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:307:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float rate = find_float_arg(argc, argv, "-rate", .04);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:308:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float thresh = find_float_arg(argc, argv, "-thresh", 1.);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:309:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float rotate = find_float_arg(argc, argv, "-rotate", 0);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:310:64:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float momentum = find_float_arg(argc, argv, "-momentum", .9);
[01;32m[K                                                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:311:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float lambda = find_float_arg(argc, argv, "-lambda", .01);
[01;32m[K                                                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:312:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *prefix = find_char_arg(argc, argv, "-prefix", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:313:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int reconstruct = find_arg(argc, argv, "-reconstruct");
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:314:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int smooth_size = find_int_arg(argc, argv, "-smooth", 1);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:[m[K In function â€˜[01m[Kvoid train_regressor(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:13:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [-fpermissive]
     network **nets = calloc(ngpus, sizeof(network*));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:33:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = option_find_str(options, "backup", "/backup/");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:33:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:34:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_list = option_find_str(options, "train", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:34:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:35:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 1);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:70:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:94:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:[m[K In function â€˜[01m[Kvoid demo_regressor(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:159:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int classes = option_find_int(options, "classes", 1);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:160:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *name_list = option_find_str(options, "names", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:[m[K In function â€˜[01m[Kvoid run_regressor(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:206:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *gpu_list = find_char_arg(argc, argv, "-gpus", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:218:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         gpus = calloc(ngpus, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:229:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:230:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kunsigned char** load_files(char*, int*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:14:38:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kunsigned char**[m[Kâ€™ [-fpermissive]
     unsigned char **contents = calloc(*n, sizeof(char *));
[01;32m[K                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kint* read_tokenized_data(char*, size_t*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     int *d = calloc(size, sizeof(int));
[01;32m[K                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:36:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
             d = realloc(d, size*sizeof(int));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:42:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
     d = realloc(d, count*sizeof(int));
[01;32m[K                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kchar** read_tokens(char*, size_t*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:52:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
     char **d = calloc(size, sizeof(char *));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:58:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
             d = realloc(d, size*sizeof(char *));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:60:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         if(0==strcmp(line, "<NEWLINE>")) line = "\n";
[01;32m[K                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:64:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [-fpermissive]
     d = realloc(d, count*sizeof(char *));
[01;32m[K                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kfloat_pair get_rnn_token_data(int*, size_t*, int, size_t, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:72:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *x = calloc(batch * steps * characters, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:73:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *y = calloc(batch * steps * characters, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kfloat_pair get_seq2seq_data(char**, char**, int, int, size_t, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:99:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *x = calloc(batch * steps * characters, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:100:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *y = calloc(batch * steps * characters, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kfloat_pair get_rnn_data(unsigned char*, size_t*, int, size_t, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:129:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *x = calloc(batch * steps * characters, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:130:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *y = calloc(batch * steps * characters, sizeof(float));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid train_char_rnn(char*, char*, char*, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:170:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:184:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ksize_t* {aka long unsigned int*}[m[Kâ€™ [-fpermissive]
     size_t *offsets = calloc(streams, sizeof(size_t));
[01;32m[K                             ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:191:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid test_char_rnn(char*, char*, int, char*, float, int, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:264:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *input = calloc(inputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid test_tactic_rnn_multi(char*, char*, int, float, int, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:317:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *input = calloc(inputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid test_tactic_rnn(char*, char*, int, float, int, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:362:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *input = calloc(inputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid valid_tactic_rnn(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:398:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *input = calloc(inputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid valid_char_rnn(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:447:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *input = calloc(inputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid vec_char_rnn(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:483:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [-fpermissive]
     float *input = calloc(inputs, sizeof(float));
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid run_char_rnn(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:525:79:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *filename = find_char_arg(argc, argv, "-file", "data/shakespeare.txt");
[01;32m[K                                                                               ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:525:79:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:526:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *seed = find_char_arg(argc, argv, "-seed", "\n\n");
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:526:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:527:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int len = find_int_arg(argc, argv, "-len", 1000);
[01;32m[K                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:528:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float temp = find_float_arg(argc, argv, "-temp", .7);
[01;32m[K                                                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:529:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int rseed = find_int_arg(argc, argv, "-srand", time(0));
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:530:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:531:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int tokenized = find_arg(argc, argv, "-tokenized");
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:532:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *tokens = find_char_arg(argc, argv, "-tokens", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:[m[K In function â€˜[01m[Kvoid train_segmenter(char*, char*, char*, int*, int, int, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:13:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [-fpermissive]
     network **nets = calloc(ngpus, sizeof(network*));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:38:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = option_find_str(options, "backup", "/backup/");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:38:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:39:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_list = option_find_str(options, "train", "data/train.list");
[01;32m[K                                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:39:75:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:74:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:109:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:[m[K In function â€˜[01m[Kvoid run_segmenter(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:220:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *gpu_list = find_char_arg(argc, argv, "-gpus", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:232:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [-fpermissive]
         gpus = calloc(ngpus, sizeof(int));
[01;32m[K                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:243:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:244:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:245:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int display = find_arg(argc, argv, "-display");
[01;32m[K                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:[m[K In function â€˜[01m[Kvoid train_super(char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:5:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_images = "/data/imagenet/imagenet1k.train.list";
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:6:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:35:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:[m[K In function â€˜[01m[Kvoid run_super(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:114:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:[m[K In function â€˜[01m[Kvoid train_tag(char*, char*, int)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:8:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:13:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     list *plist = get_paths("/home/pjreddie/tag/train.list");
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:46:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches || net->max_batches == 0){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:59:25:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         if(*net->seen/N > epoch){
[01;32m[K                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:[m[K In function â€˜[01m[Kvoid test_tag(char*, char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:89:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char **names = get_labels("data/tags.txt");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:[m[K In function â€˜[01m[Kvoid run_tag(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:133:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int clear = find_arg(argc, argv, "-clear");
[01;32m[K                                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
 char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
[01;32m[K                                                                                                                                                                                                                       ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:215:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid train_yolo(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:7:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *train_images = "/data/voc/train.txt";
[01;32m[K                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:8:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *backup_directory = "/home/pjreddie/backup/";
[01;32m[K                              ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:50:34:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     while(get_current_batch(net) < net->max_batches){
[01;32m[K                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid validate_yolo(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:105:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *base = "results/comp4_det_test_";
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:107:68:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     list *plist = get_paths("/home/pjreddie/data/voc/2007_test.txt");
[01;32m[K                                                                    ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:115:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE** {aka _IO_FILE**}[m[Kâ€™ [-fpermissive]
     FILE **fps = calloc(classes, sizeof(FILE *));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:131:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:132:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *val_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:133:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf = calloc(nthreads, sizeof(image));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:134:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [-fpermissive]
     image *buf_resized = calloc(nthreads, sizeof(image));
[01;32m[K                                ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:135:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t* {aka long unsigned int*}[m[Kâ€™ [-fpermissive]
     pthread_t *thr = calloc(nthreads, sizeof(pthread_t));
[01;32m[K                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid validate_yolo_recall(char*, char*)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:189:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *base = "results/comp4_det_test_";
[01;32m[K                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:190:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     list *plist = get_paths("data/voc.2007.test");
[01;32m[K                                                 ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:198:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE** {aka _IO_FILE**}[m[Kâ€™ [-fpermissive]
     FILE **fps = calloc(classes, sizeof(FILE *));
[01;32m[K                        ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:229:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(path, "images", "labels", labelpath);
[01;32m[K                                                         ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:229:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:230:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, "JPEGImages", "labels", labelpath);
[01;32m[K                                                                  ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:230:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:231:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".jpg", ".txt", labelpath);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:231:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:232:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
         find_replace(labelpath, ".JPEG", ".txt", labelpath);
[01;32m[K                                                           ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:232:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid run_yolo(int, char**)[m[Kâ€™:
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:309:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     char *prefix = find_char_arg(argc, argv, "-prefix", 0);
[01;32m[K                                                          ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:310:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     float thresh = find_float_arg(argc, argv, "-thresh", .2);
[01;32m[K                                                            ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:311:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int cam_index = find_int_arg(argc, argv, "-c", 0);
[01;32m[K                                                     ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:312:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int frame_skip = find_int_arg(argc, argv, "-s", 0);
[01;32m[K                                                      ^[m[K
[01m[K/home/xavier/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:318:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
     int avg = find_int_arg(argc, argv, "-avg", 1);
[01;32m[K                                                 ^[m[K
