<?xml version="1.0"?>
<launch>
    <arg name="publish_images" default="true"/>
    <arg name="jsdev" default="/dev/input/js0"/>
    <rosparam file="$(find pitakuru)/config/pitakuru.yaml" command="load" ns="pitakuru" />

    <!-- カメラから画像を読み込んで配信 -->
    <node name="uvc_camera_node" pkg="uvc_camera" type="uvc_camera_node" output="screen">
        <!-- <param name="device" type="string" value="/dev/input/by-id/usb-KYE_Systems_Corp._USB_Camera_200901010001-event-if00"/> -->
        <param name="device" type="string" value="/dev/video0"/>
        <param name="width" type="int" value="1280"/>
        <param name="height" type="int" value="720"/>
        <param name="camera_info_url" value="file://$(find pitakuru)/config/aruco/camera.yaml"/>
    </node>

    <!-- ArUco検知 -->
    <node pkg="aruco_detect" type="aruco_detect" name="aruco_detect">
        <rosparam command="load" file="$(find pitakuru)/config/aruco/aruco.yaml"/>
        <param name="publish_images" value="$(arg publish_images)"/>
        <remap from="camera" to="/image_raw"/>
    </node>

    <!-- RPLidar -->
    <node pkg="rplidar_ros" type="rplidarNode" name="rplidarNode">
        <rosparam command="load" file="$(find pitakuru)/config/obstacle/rplidar.yaml" />
    </node>

    <!-- obstacle detector -->
 <!--    <rosparam command="load" file="$(find pitakuru)/config/obstacle/obstacle_detector.yaml" />
    <node name="obstacle_extractor" pkg="obstacle_detector" type="obstacle_extractor_node">
        <remap from="scan" to="/scan" />
    </node>
    <node name="obstacle_tracker" pkg="obstacle_detector" type="obstacle_tracker_node" />  -->

    <!-- 危険物の検知 -->
 <!--   <node pkg="pitakuru" type="find_obstacle.py" name="find_obstacle">
        <rosparam command="load" file="$(find pitakuru)/config/obstacle/obstacle.yaml" />
    </node>-->

    <!-- モーター -->
  <!--  <node pkg="pitakuru" type="motor.py" name="motor">
        <rosparam command="load" file="$(find pitakuru)/config/motor.yaml" />
    </node>-->

    <!-- ジョイスティック -->
 <!--  <node pkg="joy" type="joy_node" name="joy_node">
        <param name="dev" value="$(arg jsdev)"/>
    </node>  -->



    <node pkg="pitakuru" type="controller.py" name="controller"/>



<include file="$(find joy)/launch/joytestps4.launch"/>
<!-- <node pkg="gamepad" type="gamepad_node" name="gamepad_node" output="screen">	
</node>-->

<node pkg="conversion" type="quatCo.py" name="quatCo" output="screen">	
</node>

<node pkg="conversion" type="quatCo2.py" name="quatCo2" output="screen">	
</node>
<!-- keiganモーター制御/オドメトリ算出ノード -->
<!--<node pkg="pypro" name="pitakuru_wheels" type="pitakuruWheels.py">
</node>-->

<node pkg="control_xy" type="control_xy_node" name="control_xy" output="screen">	
</node>




    <!-- スイッチの入出力制御 -->
    <node pkg="pitakuru" type="switch.py" name="switch">
        <rosparam command="load" file="$(find pitakuru)/config/switch.yaml" />
    </node>

    <!-- ステートマシン (状態遷移) -->
    <node pkg="pitakuru" type="states.py" name="states"/>

    <!-- 速度指令変換 -->
    <rosparam command="load" file="$(find pitakuru)/config/movement.yaml" />
    <node pkg="pitakuru" type="movement.py" name="movement" />
    <node pkg="pitakuru" type="karugamo.py" name="karugamo" />
    <node pkg="pitakuru" type="manual.py" name="manual" />
    
    <!-- 音声再生 -->
    <!-- <node pkg="pitakuru" type="sound.py" name="sound" /> -->
</launch>
